{"mappings":"IIKI,EFOA,ECJG,SAAS,EAAe,CAAK,EAEhC,AADgB,SAAS,aAAa,CAAC,UAC/B,SAAS,CAAG,UAAY,CACpC,CAGO,SAAS,EAAiB,CAAa,EAE1C,IAAM,EAAqB,SAAS,aAAa,CAAC,cAGlD,IAAI,IAAM,KAFV,EAAmB,SAAS,CAAG,GAET,GAAc,CAChC,IAAM,EAAW,SAAS,aAAa,CAAC,OAClC,EAAS,SAAS,aAAa,CAAC,KAChC,EAAU,SAAS,aAAa,CAAC,KAEvC,EAAS,SAAS,CAAC,GAAG,CAAC,aACvB,EAAO,SAAS,CAAG,EAAS,IAAI,CAChC,EAAQ,SAAS,CAAG,EAAS,KAAK,CAElC,EAAS,MAAM,CAAC,EAAQ,GACxB,EAAmB,MAAM,CAAC,EAC9B,CAEJ,CAEO,SAAS,IACZ,IAAM,EAAqB,SAAS,aAAa,CAAC,aAClD,CAAA,EAAmB,SAAS,CAAG,GAE/B,IAAM,EAAM,SAAS,aAAa,CAAC,KACnC,EAAI,SAAS,CAAC,GAAG,CAAC,SAClB,EAAI,SAAS,CAAG,6FAEhB,EAAmB,MAAM,CAAC,EAC9B,CCvCA,MAAM,EAAM,kCAGZ,eAAe,IACX,IAAM,EAAM,MAAM,MAAM,GAClB,EAAY,MAAM,EAAI,IAAI,GAKhC,OAFA,EAAiB,CAAS,CAAC,EAAU,MAAM,CAAC,EAAE,CAAC,KAAK,CAE7C,CACX,CAEA,eAAe,EAAa,CAAK,EAE7B,IAAM,EAAU,CACZ,OAAQ,MACR,KAAM,KAAK,SAAS,CAAC,GACrB,QAAS,CACD,eAAgB,iCACpB,CACR,EAEM,EAAM,MAAM,MAAM,EAAK,GAG7B,OAFkB,MAAM,EAAI,IAAI,EAGpC,CFTA,AAXqB,SAAS,aAAa,CAAC,cAW/B,gBAAgB,CAAC,QAAS,AAAA,IAEP,UAAxB,EAAM,MAAM,CAAC,OAAO,GAKhB,AAJc,EAAM,MAAM,CAAC,SAAS,EA8BrC,KAAK,KAAK,CAAC,AAAgB,EAAhB,KAAK,MAAM,IAAU,GCPvC,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAE5B,WAAW,KACP,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UACnC,EAAG,KDpBK,AAAA,IAAe,KCwBvB,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAC5B,WAAW,KACP,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QACnC,EAAG,KDrBK,WAAW,KACP,IAAM,EAAO,OAAO,CAAC,mBAAgB,EAAE,EAAU,yEAAmE,CAAC,CAAE,oBAEnH,GAAQ,EAAU,GAClB,AAAA,EAAa,CAAE,KAAA,EAAM,MAAO,CAAU,GACjC,IAAI,CAAC,GACL,KAAK,CAAC,GA3B3B,AAAA,EADA,EAAY,EAgCJ,EAAG,MAGf,GDtCA,AAAA,IACK,IAAI,CAAE,GACN,KAAK,CAAE,GCER,AAAA,EADA,EAAY","sources":["<anon>","src/main.js","src/modules/game.js","src/modules/gui.js","src/modules/highscorefetch.js"],"sourcesContent":["/**\r\n * In this game a player needs to guess a number from 1 to 3. \r\n * - When a guess is correct the user gets one point.\r\n * - When a guess is incorrect the game is over. The user then enters their name and if the user's score is more than the minimum score on the list, the highscore list is updated with the users name and score. \r\n * \r\n * The highscore list is stored in a json file and accesSible through a nodejs express server running locally. \r\n * \r\n */ /**\r\n * Contains all the logic for the game.\r\n * Updates the highscore if the user score is more than the minimun score on the list\r\n * \r\n */ /**\r\n * Functions for updating the GUI\r\n * - Users score\r\n * - Highscore list\r\n * - Error message\r\n * - Background color flash\r\n */ function $c819fef8e67a29d3$export$9a5c5168bae8a40c(score) {\n    const scoreEl = document.querySelector(\"#score\");\n    scoreEl.innerText = \"Score: \" + score;\n}\nfunction $c819fef8e67a29d3$export$e3debe22962c0374(highscoreList) {\n    const highscoreContainer = document.querySelector(\"#highscore\");\n    highscoreContainer.innerHTML = \"\";\n    for (const scoreObj of highscoreList){\n        const scoreDiv = document.createElement(\"div\");\n        const nameEl = document.createElement(\"p\");\n        const scoreEl = document.createElement(\"p\");\n        scoreDiv.classList.add(\"score-div\");\n        nameEl.innerText = scoreObj.name;\n        scoreEl.innerText = scoreObj.score;\n        scoreDiv.append(nameEl, scoreEl);\n        highscoreContainer.append(scoreDiv);\n    }\n}\nfunction $c819fef8e67a29d3$export$7e605cc38c3f1d09() {\n    const highscoreContainer = document.querySelector(\"#highscore\");\n    highscoreContainer.innerHTML = \"\";\n    const pEl = document.createElement(\"p\");\n    pEl.classList.add(\"error\");\n    pEl.innerText = \"Something went wrong when fetching or updating the highscore list. Please try again later.\";\n    highscoreContainer.append(pEl);\n}\nfunction $c819fef8e67a29d3$export$9b45e92538d75d79() {\n    document.body.classList.add(\"correct\");\n    setTimeout(()=>{\n        document.body.classList.remove(\"correct\");\n    }, 600);\n}\nfunction $c819fef8e67a29d3$export$34fe2a02180ec0b8() {\n    document.body.classList.add(\"wrong\");\n    setTimeout(()=>{\n        document.body.classList.remove(\"wrong\");\n    }, 1000);\n}\n\n\n/**\r\n * Functions for sending http requests to othe server containing the highscore list\r\n */ const $81f57a052c6b51ae$var$url = \"http://localhost:3000/highscore\";\nlet $81f57a052c6b51ae$export$806257ed8a0f8c84;\nasync function $81f57a052c6b51ae$export$324a59f4a7abce50() {\n    const res = await fetch($81f57a052c6b51ae$var$url);\n    const highscore = await res.json();\n    // Store the minimun score in the list to compare user score with\n    $81f57a052c6b51ae$export$806257ed8a0f8c84 = highscore[highscore.length - 1].score;\n    return highscore;\n}\nasync function $81f57a052c6b51ae$export$69f4796e91397629(score) {\n    const options = {\n        method: \"PUT\",\n        body: JSON.stringify(score),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    const res = await fetch($81f57a052c6b51ae$var$url, options);\n    const highscore = await res.json();\n    return highscore;\n}\n\n\nconst $10fb8186dcd161b3$var$btnContainer = document.querySelector(\"#guessBtns\");\nlet $10fb8186dcd161b3$var$userScore;\nfunction $10fb8186dcd161b3$export$5f9f2982725d71d5() {\n    $10fb8186dcd161b3$var$userScore = 0;\n    (0, $c819fef8e67a29d3$export$9a5c5168bae8a40c)($10fb8186dcd161b3$var$userScore);\n}\n//Check users guess \n$10fb8186dcd161b3$var$btnContainer.addEventListener(\"click\", (event)=>{\n    if (event.target.tagName == \"BUTTON\") {\n        const userGuess = event.target.innerText;\n        const randomNumber = $10fb8186dcd161b3$var$getRandomNumber();\n        // const randomNumber = 1; //For testing\n        if (userGuess == randomNumber) {\n            (0, $c819fef8e67a29d3$export$9b45e92538d75d79)();\n            $10fb8186dcd161b3$var$userScore++;\n            (0, $c819fef8e67a29d3$export$9a5c5168bae8a40c)($10fb8186dcd161b3$var$userScore);\n        } else {\n            (0, $c819fef8e67a29d3$export$34fe2a02180ec0b8)();\n            // Using timeout to make sure the background color change is visible before the prompt shows\n            setTimeout(()=>{\n                const name = prompt(`Du gissade r\\xe4tt ${$10fb8186dcd161b3$var$userScore} g\\xe5nger. Skriv in ditt namn och se om du platsar p\\xe5 highscorelistan`, \"Clara the Mighty\");\n                if (name && $10fb8186dcd161b3$var$userScore > (0, $81f57a052c6b51ae$export$806257ed8a0f8c84)) (0, $81f57a052c6b51ae$export$69f4796e91397629)({\n                    name: name,\n                    score: $10fb8186dcd161b3$var$userScore\n                }).then((0, $c819fef8e67a29d3$export$e3debe22962c0374)).catch((0, $c819fef8e67a29d3$export$7e605cc38c3f1d09));\n                $10fb8186dcd161b3$export$5f9f2982725d71d5();\n            }, 300);\n        }\n    }\n});\n// Generate random number from 1 to 3\nfunction $10fb8186dcd161b3$var$getRandomNumber() {\n    return Math.floor(Math.random() * 3) + 1;\n}\n\n\n\n\n(0, $81f57a052c6b51ae$export$324a59f4a7abce50)().then((0, $c819fef8e67a29d3$export$e3debe22962c0374)).catch((0, $c819fef8e67a29d3$export$7e605cc38c3f1d09));\n(0, $10fb8186dcd161b3$export$5f9f2982725d71d5)();\n\n\n//# sourceMappingURL=index.93994fbb.js.map\n","/**\r\n * In this game a player needs to guess a number from 1 to 3. \r\n * - When a guess is correct the user gets one point.\r\n * - When a guess is incorrect the game is over. The user then enters their name and if the user's score is more than the minimum score on the list, the highscore list is updated with the users name and score. \r\n * \r\n * The highscore list is stored in a json file and accesSible through a nodejs express server running locally. \r\n * \r\n */\r\nimport { startGame } from \"./modules/game.js\";\r\nimport { getHighscore } from \"./modules/highscorefetch.js\";\r\nimport { displayHighScore, displayError } from \"./modules/gui.js\";\r\n\r\n\r\ngetHighscore()\r\n    .then( displayHighScore )\r\n    .catch( displayError );\r\n\r\nstartGame();","/**\r\n * Contains all the logic for the game.\r\n * Updates the highscore if the user score is more than the minimun score on the list\r\n * \r\n */\r\n\r\nimport { displayHighScore, updateScoreGUI, flashGreen, flashRed, displayError } from \"./gui.js\";\r\nimport { addHighscore, minScoreInList } from \"./highscorefetch.js\";\r\n\r\n    \r\n\r\nconst btnContainer = document.querySelector(\"#guessBtns\");\r\nlet userScore;\r\n\r\n// Reset game variables\r\nexport function startGame() {\r\n    userScore = 0;\r\n    updateScoreGUI(userScore);\r\n}\r\n\r\n\r\n//Check users guess \r\nbtnContainer.addEventListener('click', event => {\r\n\r\n    if (event.target.tagName == \"BUTTON\") {\r\n        const userGuess = event.target.innerText;\r\n        const randomNumber = getRandomNumber();\r\n        // const randomNumber = 1; //For testing\r\n\r\n        if (userGuess == randomNumber) {\r\n            flashGreen();\r\n            userScore++;\r\n            updateScoreGUI(userScore);\r\n        }\r\n        else {\r\n            flashRed();\r\n\r\n            // Using timeout to make sure the background color change is visible before the prompt shows\r\n            setTimeout(() => {\r\n                const name = prompt(`Du gissade rätt ${userScore} gånger. Skriv in ditt namn och se om du platsar på highscorelistan`, 'Clara the Mighty');\r\n\r\n                if (name && userScore>minScoreInList){\r\n                    addHighscore({ name, score: userScore })\r\n                        .then(displayHighScore)\r\n                        .catch(displayError);\r\n                }\r\n                    \r\n                startGame();\r\n            }, 300)\r\n        }\r\n    }\r\n})\r\n\r\n// Generate random number from 1 to 3\r\nfunction getRandomNumber() {\r\n    return Math.floor(Math.random() * 3) + 1;\r\n}\r\n","/**\r\n * Functions for updating the GUI\r\n * - Users score\r\n * - Highscore list\r\n * - Error message\r\n * - Background color flash\r\n */\r\n\r\nexport function updateScoreGUI(score){\r\n    const scoreEl = document.querySelector(\"#score\");\r\n    scoreEl.innerText = \"Score: \" + score;\r\n}\r\n\r\n\r\nexport function displayHighScore(highscoreList){\r\n\r\n    const highscoreContainer = document.querySelector('#highscore');\r\n    highscoreContainer.innerHTML = '';\r\n\r\n    for(const scoreObj of highscoreList){\r\n        const scoreDiv = document.createElement('div');\r\n        const nameEl = document.createElement('p');\r\n        const scoreEl = document.createElement('p');\r\n\r\n        scoreDiv.classList.add('score-div');\r\n        nameEl.innerText = scoreObj.name;\r\n        scoreEl.innerText = scoreObj.score;\r\n\r\n        scoreDiv.append(nameEl, scoreEl);\r\n        highscoreContainer.append(scoreDiv);\r\n    }\r\n    \r\n}\r\n\r\nexport function displayError(){\r\n    const highscoreContainer = document.querySelector('#highscore');\r\n    highscoreContainer.innerHTML = ''\r\n\r\n    const pEl = document.createElement('p');\r\n    pEl.classList.add(\"error\");\r\n    pEl.innerText = \"Something went wrong when fetching or updating the highscore list. Please try again later.\";\r\n\r\n    highscoreContainer.append(pEl)\r\n}\r\n\r\n\r\n// Change background color temporarily to green or red to indicate a correct or wrong guess by the user\r\nexport function flashGreen(){\r\n    document.body.classList.add('correct');\r\n\r\n    setTimeout(()=>{\r\n        document.body.classList.remove('correct')\r\n    }, 600)\r\n}\r\n\r\nexport function flashRed(){\r\n    document.body.classList.add('wrong');\r\n    setTimeout(()=>{\r\n        document.body.classList.remove('wrong')\r\n    }, 1000)\r\n}","/**\r\n * Functions for sending http requests to othe server containing the highscore list\r\n */\r\n\r\nconst url = 'http://localhost:3000/highscore'\r\nlet minScoreInList;\r\n\r\nasync function getHighscore(){\r\n    const res = await fetch(url);\r\n    const highscore = await res.json();\r\n\r\n    // Store the minimun score in the list to compare user score with\r\n    minScoreInList = highscore[highscore.length-1].score;\r\n\r\n    return highscore;\r\n}\r\n\r\nasync function addHighscore(score){\r\n\r\n    const options = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(score),\r\n        headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            } \r\n    }\r\n\r\n    const res = await fetch(url, options);\r\n    const highscore = await res.json();\r\n\r\n    return highscore;\r\n}\r\n\r\nexport {getHighscore, addHighscore, minScoreInList}"],"names":["$81f57a052c6b51ae$export$806257ed8a0f8c84","$10fb8186dcd161b3$var$userScore","$c819fef8e67a29d3$export$9a5c5168bae8a40c","score","scoreEl","document","querySelector","innerText","$c819fef8e67a29d3$export$e3debe22962c0374","highscoreList","highscoreContainer","scoreObj","innerHTML","scoreDiv","createElement","nameEl","classList","add","name","append","$c819fef8e67a29d3$export$7e605cc38c3f1d09","pEl","$81f57a052c6b51ae$var$url","$81f57a052c6b51ae$export$324a59f4a7abce50","res","fetch","highscore","json","length","$81f57a052c6b51ae$export$69f4796e91397629","options","method","body","JSON","stringify","headers","$10fb8186dcd161b3$var$btnContainer","addEventListener","event","target","tagName","userGuess","Math","floor","random","setTimeout","remove","prompt","then","catch"],"version":3,"file":"index.93994fbb.js.map"}